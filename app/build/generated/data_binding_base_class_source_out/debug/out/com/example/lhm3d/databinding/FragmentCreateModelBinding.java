// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.google.android.material.slider.Slider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateModelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonGenerate;

  @NonNull
  public final MaterialButton buttonTakePhoto;

  @NonNull
  public final MaterialButton buttonUploadImage;

  @NonNull
  public final LinearLayout buttonsContainer;

  @NonNull
  public final ImageView imagePreview;

  @NonNull
  public final FrameLayout imagePreviewContainer;

  @NonNull
  public final LinearProgressIndicator progressIndicator;

  @NonNull
  public final Slider sliderDetailLevel;

  @NonNull
  public final TextView textDetailLevel;

  @NonNull
  public final TextView textNoImage;

  @NonNull
  public final TextView textOptionsTitle;

  @NonNull
  public final TextView textProcessing;

  @NonNull
  public final TextView textTitle;

  private FragmentCreateModelBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonGenerate, @NonNull MaterialButton buttonTakePhoto,
      @NonNull MaterialButton buttonUploadImage, @NonNull LinearLayout buttonsContainer,
      @NonNull ImageView imagePreview, @NonNull FrameLayout imagePreviewContainer,
      @NonNull LinearProgressIndicator progressIndicator, @NonNull Slider sliderDetailLevel,
      @NonNull TextView textDetailLevel, @NonNull TextView textNoImage,
      @NonNull TextView textOptionsTitle, @NonNull TextView textProcessing,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonGenerate = buttonGenerate;
    this.buttonTakePhoto = buttonTakePhoto;
    this.buttonUploadImage = buttonUploadImage;
    this.buttonsContainer = buttonsContainer;
    this.imagePreview = imagePreview;
    this.imagePreviewContainer = imagePreviewContainer;
    this.progressIndicator = progressIndicator;
    this.sliderDetailLevel = sliderDetailLevel;
    this.textDetailLevel = textDetailLevel;
    this.textNoImage = textNoImage;
    this.textOptionsTitle = textOptionsTitle;
    this.textProcessing = textProcessing;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateModelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateModelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create_model, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateModelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_generate;
      MaterialButton buttonGenerate = ViewBindings.findChildViewById(rootView, id);
      if (buttonGenerate == null) {
        break missingId;
      }

      id = R.id.button_take_photo;
      MaterialButton buttonTakePhoto = ViewBindings.findChildViewById(rootView, id);
      if (buttonTakePhoto == null) {
        break missingId;
      }

      id = R.id.button_upload_image;
      MaterialButton buttonUploadImage = ViewBindings.findChildViewById(rootView, id);
      if (buttonUploadImage == null) {
        break missingId;
      }

      id = R.id.buttons_container;
      LinearLayout buttonsContainer = ViewBindings.findChildViewById(rootView, id);
      if (buttonsContainer == null) {
        break missingId;
      }

      id = R.id.image_preview;
      ImageView imagePreview = ViewBindings.findChildViewById(rootView, id);
      if (imagePreview == null) {
        break missingId;
      }

      id = R.id.image_preview_container;
      FrameLayout imagePreviewContainer = ViewBindings.findChildViewById(rootView, id);
      if (imagePreviewContainer == null) {
        break missingId;
      }

      id = R.id.progress_indicator;
      LinearProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.slider_detail_level;
      Slider sliderDetailLevel = ViewBindings.findChildViewById(rootView, id);
      if (sliderDetailLevel == null) {
        break missingId;
      }

      id = R.id.text_detail_level;
      TextView textDetailLevel = ViewBindings.findChildViewById(rootView, id);
      if (textDetailLevel == null) {
        break missingId;
      }

      id = R.id.text_no_image;
      TextView textNoImage = ViewBindings.findChildViewById(rootView, id);
      if (textNoImage == null) {
        break missingId;
      }

      id = R.id.text_options_title;
      TextView textOptionsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textOptionsTitle == null) {
        break missingId;
      }

      id = R.id.text_processing;
      TextView textProcessing = ViewBindings.findChildViewById(rootView, id);
      if (textProcessing == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new FragmentCreateModelBinding((ConstraintLayout) rootView, buttonGenerate,
          buttonTakePhoto, buttonUploadImage, buttonsContainer, imagePreview, imagePreviewContainer,
          progressIndicator, sliderDetailLevel, textDetailLevel, textNoImage, textOptionsTitle,
          textProcessing, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
