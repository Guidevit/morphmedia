// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemModelBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageView imageModelThumbnail;

  @NonNull
  public final TextView textModelDate;

  @NonNull
  public final TextView textModelStatus;

  @NonNull
  public final TextView textModelTitle;

  private ItemModelBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageView imageModelThumbnail, @NonNull TextView textModelDate,
      @NonNull TextView textModelStatus, @NonNull TextView textModelTitle) {
    this.rootView = rootView;
    this.imageModelThumbnail = imageModelThumbnail;
    this.textModelDate = textModelDate;
    this.textModelStatus = textModelStatus;
    this.textModelTitle = textModelTitle;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemModelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemModelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_model, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemModelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_model_thumbnail;
      ImageView imageModelThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (imageModelThumbnail == null) {
        break missingId;
      }

      id = R.id.text_model_date;
      TextView textModelDate = ViewBindings.findChildViewById(rootView, id);
      if (textModelDate == null) {
        break missingId;
      }

      id = R.id.text_model_status;
      TextView textModelStatus = ViewBindings.findChildViewById(rootView, id);
      if (textModelStatus == null) {
        break missingId;
      }

      id = R.id.text_model_title;
      TextView textModelTitle = ViewBindings.findChildViewById(rootView, id);
      if (textModelTitle == null) {
        break missingId;
      }

      return new ItemModelBinding((MaterialCardView) rootView, imageModelThumbnail, textModelDate,
          textModelStatus, textModelTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
