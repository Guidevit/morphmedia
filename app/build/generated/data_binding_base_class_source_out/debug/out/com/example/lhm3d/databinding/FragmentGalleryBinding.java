// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGalleryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton buttonFilter;

  @NonNull
  public final MaterialButton buttonSort;

  @NonNull
  public final LinearLayout filterControls;

  @NonNull
  public final TabLayout galleryTabs;

  @NonNull
  public final RecyclerView recyclerModels;

  @NonNull
  public final TextView textEmptyState;

  private FragmentGalleryBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton buttonFilter, @NonNull MaterialButton buttonSort,
      @NonNull LinearLayout filterControls, @NonNull TabLayout galleryTabs,
      @NonNull RecyclerView recyclerModels, @NonNull TextView textEmptyState) {
    this.rootView = rootView;
    this.buttonFilter = buttonFilter;
    this.buttonSort = buttonSort;
    this.filterControls = filterControls;
    this.galleryTabs = galleryTabs;
    this.recyclerModels = recyclerModels;
    this.textEmptyState = textEmptyState;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gallery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGalleryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_filter;
      MaterialButton buttonFilter = ViewBindings.findChildViewById(rootView, id);
      if (buttonFilter == null) {
        break missingId;
      }

      id = R.id.button_sort;
      MaterialButton buttonSort = ViewBindings.findChildViewById(rootView, id);
      if (buttonSort == null) {
        break missingId;
      }

      id = R.id.filter_controls;
      LinearLayout filterControls = ViewBindings.findChildViewById(rootView, id);
      if (filterControls == null) {
        break missingId;
      }

      id = R.id.gallery_tabs;
      TabLayout galleryTabs = ViewBindings.findChildViewById(rootView, id);
      if (galleryTabs == null) {
        break missingId;
      }

      id = R.id.recycler_models;
      RecyclerView recyclerModels = ViewBindings.findChildViewById(rootView, id);
      if (recyclerModels == null) {
        break missingId;
      }

      id = R.id.text_empty_state;
      TextView textEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyState == null) {
        break missingId;
      }

      return new FragmentGalleryBinding((ConstraintLayout) rootView, buttonFilter, buttonSort,
          filterControls, galleryTabs, recyclerModels, textEmptyState);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
