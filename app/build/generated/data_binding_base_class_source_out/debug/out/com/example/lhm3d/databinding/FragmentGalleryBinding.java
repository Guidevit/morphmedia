// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentGalleryBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView emptyText;

  @NonNull
  public final Chip filterAll;

  @NonNull
  public final Chip filterFavorites;

  @NonNull
  public final ChipGroup filterGroup;

  @NonNull
  public final Chip filterRecent;

  @NonNull
  public final ProgressBar loadingIndicator;

  @NonNull
  public final RecyclerView modelsRecycler;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TextView title;

  private FragmentGalleryBinding(@NonNull ConstraintLayout rootView, @NonNull TextView emptyText,
      @NonNull Chip filterAll, @NonNull Chip filterFavorites, @NonNull ChipGroup filterGroup,
      @NonNull Chip filterRecent, @NonNull ProgressBar loadingIndicator,
      @NonNull RecyclerView modelsRecycler, @NonNull TabLayout tabLayout, @NonNull TextView title) {
    this.rootView = rootView;
    this.emptyText = emptyText;
    this.filterAll = filterAll;
    this.filterFavorites = filterFavorites;
    this.filterGroup = filterGroup;
    this.filterRecent = filterRecent;
    this.loadingIndicator = loadingIndicator;
    this.modelsRecycler = modelsRecycler;
    this.tabLayout = tabLayout;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentGalleryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_gallery, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentGalleryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_text;
      TextView emptyText = ViewBindings.findChildViewById(rootView, id);
      if (emptyText == null) {
        break missingId;
      }

      id = R.id.filter_all;
      Chip filterAll = ViewBindings.findChildViewById(rootView, id);
      if (filterAll == null) {
        break missingId;
      }

      id = R.id.filter_favorites;
      Chip filterFavorites = ViewBindings.findChildViewById(rootView, id);
      if (filterFavorites == null) {
        break missingId;
      }

      id = R.id.filter_group;
      ChipGroup filterGroup = ViewBindings.findChildViewById(rootView, id);
      if (filterGroup == null) {
        break missingId;
      }

      id = R.id.filter_recent;
      Chip filterRecent = ViewBindings.findChildViewById(rootView, id);
      if (filterRecent == null) {
        break missingId;
      }

      id = R.id.loading_indicator;
      ProgressBar loadingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (loadingIndicator == null) {
        break missingId;
      }

      id = R.id.models_recycler;
      RecyclerView modelsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (modelsRecycler == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new FragmentGalleryBinding((ConstraintLayout) rootView, emptyText, filterAll,
          filterFavorites, filterGroup, filterRecent, loadingIndicator, modelsRecycler, tabLayout,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
