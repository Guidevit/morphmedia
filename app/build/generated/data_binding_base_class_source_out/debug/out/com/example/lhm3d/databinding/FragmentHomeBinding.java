// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView featuredModelsRecycler;

  @NonNull
  public final TextView featuredModelsTitle;

  @NonNull
  public final ProgressBar loadingIndicator;

  @NonNull
  public final RecyclerView recentModelsRecycler;

  @NonNull
  public final TextView recentModelsTitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialButton tutorialButton;

  @NonNull
  public final MaterialCardView tutorialCard;

  @NonNull
  public final ImageView tutorialImage;

  @NonNull
  public final TextView tutorialTitle;

  private FragmentHomeBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView featuredModelsRecycler, @NonNull TextView featuredModelsTitle,
      @NonNull ProgressBar loadingIndicator, @NonNull RecyclerView recentModelsRecycler,
      @NonNull TextView recentModelsTitle, @NonNull TextView title,
      @NonNull MaterialButton tutorialButton, @NonNull MaterialCardView tutorialCard,
      @NonNull ImageView tutorialImage, @NonNull TextView tutorialTitle) {
    this.rootView = rootView;
    this.featuredModelsRecycler = featuredModelsRecycler;
    this.featuredModelsTitle = featuredModelsTitle;
    this.loadingIndicator = loadingIndicator;
    this.recentModelsRecycler = recentModelsRecycler;
    this.recentModelsTitle = recentModelsTitle;
    this.title = title;
    this.tutorialButton = tutorialButton;
    this.tutorialCard = tutorialCard;
    this.tutorialImage = tutorialImage;
    this.tutorialTitle = tutorialTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.featured_models_recycler;
      RecyclerView featuredModelsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (featuredModelsRecycler == null) {
        break missingId;
      }

      id = R.id.featured_models_title;
      TextView featuredModelsTitle = ViewBindings.findChildViewById(rootView, id);
      if (featuredModelsTitle == null) {
        break missingId;
      }

      id = R.id.loading_indicator;
      ProgressBar loadingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (loadingIndicator == null) {
        break missingId;
      }

      id = R.id.recent_models_recycler;
      RecyclerView recentModelsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (recentModelsRecycler == null) {
        break missingId;
      }

      id = R.id.recent_models_title;
      TextView recentModelsTitle = ViewBindings.findChildViewById(rootView, id);
      if (recentModelsTitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tutorial_button;
      MaterialButton tutorialButton = ViewBindings.findChildViewById(rootView, id);
      if (tutorialButton == null) {
        break missingId;
      }

      id = R.id.tutorial_card;
      MaterialCardView tutorialCard = ViewBindings.findChildViewById(rootView, id);
      if (tutorialCard == null) {
        break missingId;
      }

      id = R.id.tutorial_image;
      ImageView tutorialImage = ViewBindings.findChildViewById(rootView, id);
      if (tutorialImage == null) {
        break missingId;
      }

      id = R.id.tutorial_title;
      TextView tutorialTitle = ViewBindings.findChildViewById(rootView, id);
      if (tutorialTitle == null) {
        break missingId;
      }

      return new FragmentHomeBinding((NestedScrollView) rootView, featuredModelsRecycler,
          featuredModelsTitle, loadingIndicator, recentModelsRecycler, recentModelsTitle, title,
          tutorialButton, tutorialCard, tutorialImage, tutorialTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
