// Generated by view binder compiler. Do not edit!
package com.example.lhm3d.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lhm3d.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCreateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton createButton;

  @NonNull
  public final TextInputLayout descriptionLayout;

  @NonNull
  public final MaterialCardView imageCard;

  @NonNull
  public final ProgressBar loadingIndicator;

  @NonNull
  public final TextInputEditText modelDescription;

  @NonNull
  public final TextInputEditText modelName;

  @NonNull
  public final TextInputLayout nameLayout;

  @NonNull
  public final LinearLayout placeholderContainer;

  @NonNull
  public final ImageView previewImage;

  @NonNull
  public final TextView title;

  @NonNull
  public final MaterialButton uploadButton;

  private FragmentCreateBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton createButton, @NonNull TextInputLayout descriptionLayout,
      @NonNull MaterialCardView imageCard, @NonNull ProgressBar loadingIndicator,
      @NonNull TextInputEditText modelDescription, @NonNull TextInputEditText modelName,
      @NonNull TextInputLayout nameLayout, @NonNull LinearLayout placeholderContainer,
      @NonNull ImageView previewImage, @NonNull TextView title,
      @NonNull MaterialButton uploadButton) {
    this.rootView = rootView;
    this.createButton = createButton;
    this.descriptionLayout = descriptionLayout;
    this.imageCard = imageCard;
    this.loadingIndicator = loadingIndicator;
    this.modelDescription = modelDescription;
    this.modelName = modelName;
    this.nameLayout = nameLayout;
    this.placeholderContainer = placeholderContainer;
    this.previewImage = previewImage;
    this.title = title;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCreateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_create, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCreateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.create_button;
      MaterialButton createButton = ViewBindings.findChildViewById(rootView, id);
      if (createButton == null) {
        break missingId;
      }

      id = R.id.description_layout;
      TextInputLayout descriptionLayout = ViewBindings.findChildViewById(rootView, id);
      if (descriptionLayout == null) {
        break missingId;
      }

      id = R.id.image_card;
      MaterialCardView imageCard = ViewBindings.findChildViewById(rootView, id);
      if (imageCard == null) {
        break missingId;
      }

      id = R.id.loading_indicator;
      ProgressBar loadingIndicator = ViewBindings.findChildViewById(rootView, id);
      if (loadingIndicator == null) {
        break missingId;
      }

      id = R.id.model_description;
      TextInputEditText modelDescription = ViewBindings.findChildViewById(rootView, id);
      if (modelDescription == null) {
        break missingId;
      }

      id = R.id.model_name;
      TextInputEditText modelName = ViewBindings.findChildViewById(rootView, id);
      if (modelName == null) {
        break missingId;
      }

      id = R.id.name_layout;
      TextInputLayout nameLayout = ViewBindings.findChildViewById(rootView, id);
      if (nameLayout == null) {
        break missingId;
      }

      id = R.id.placeholder_container;
      LinearLayout placeholderContainer = ViewBindings.findChildViewById(rootView, id);
      if (placeholderContainer == null) {
        break missingId;
      }

      id = R.id.preview_image;
      ImageView previewImage = ViewBindings.findChildViewById(rootView, id);
      if (previewImage == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.upload_button;
      MaterialButton uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new FragmentCreateBinding((ConstraintLayout) rootView, createButton, descriptionLayout,
          imageCard, loadingIndicator, modelDescription, modelName, nameLayout,
          placeholderContainer, previewImage, title, uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
